CPP Code:
Method 1:Linear traversal between [1, num] to find factors
#include<iostream>
using namespace std;
int main()
{
    int n;
    cin>>n;
    for(int i=1;i<=n;i++)
    {
        if(n%i==0)
        {
            cout<<i<<" ";
        }
    }
}
Output:
100
1 2 4 5 10 20 25 50 100 

Method 2:Linear traversal between [1, âˆšnum] to find factors
#include<iostream>
#include<math.h>
using namespace std;
int main()
{
    int n;
    cin>>n;
    for(int i=1;i<=sqrt(n);i++)
    {
        if(n%i==0)
        {
            if(i==n/i)
            {
                cout<<i<<" ";
            }
            else
            {
                cout<<i<<" "<<n/i<<" ";
            }
            
        }
    }
}
Output:
100
1 100 2 50 4 25 5 20 10 

Python:
from math import sqrt
def printfactors(n):
    i=1
    for i in range(1,int(sqrt(n))+1):
        if(n%i==0):
            if(i==(n/i)):
                print(i,end=" ")
            else:
                print(i,int(n/i),end=" ")
        i=i+1
n=int(input())
printfactors(n)
Output:
100
1 100 2 50 4 25 5 20 10 
