Python Code:

Method 1 : Using Brute Force
This method simply checks if the given input integer is divisible by 2 or not. If it’s divisible then print Even or Odd otherwise.

Python Code

num = int(input("Enter a Number:")) 
if num % 2 == 0: 
  print("Given number is Even") 
else: 
  print("Given number is Odd")
Output:
Enter a Number: 5 
Given number is Odd

Method 2 : Using Ternary Operator
This Method uses the ternary operator to check if the integer input is divisible by 2, If true print Even or Odd otherwise.

Ternary Operator Syntax Python
( True : Action ) if ( Condition ) else ( False : Action )

Python Code

num = 17

Method 3 : Using Bitwise Operator
This Method uses bitwise operators to check if a given number is Even or Odd.

Bitwise Operators
In computer programming, a bitwise operation operates on a bit string, a bit array or a binary numeral at the level of its individual bits. It is a fast and simple action, basic to the higher-level arithmetic operations and directly supported by the processor.
Python Code

def isEven(num):
  return not (num&1) 
#& is a bitwise AND operator. Doing (num & 1) checks if the last bit (least significant bit) of the number is set. If it is set, the number is odd, and if it is not set, it is even.
if __name__ == "__main__":
  num = 13
  if isEven(num):
    print('Even')
  else:
    print('Odd')
Output:
Odd

CPP Code:

Method 1 : Using Brute Force
This method simply checks if the given input integer is divisible by 2 or not. If it’s divisible then print Even or Odd otherwise.

C++ Code

#include <iostream>
using namespace std;
int main ()
{
    int number;
    cout << "Enter a number:"; cin >> number;
 
    //checking whether the number is even or odd
    if (number % 2 == 0)
        cout << number << " : Even";
    else
        cout << number << " : Odd";
        
    return 0;
}
Output
Enter a number: 4
24 : Even

Method 2 : Using Ternary Operator
This Method uses the ternary operator to check if the integer input is divisible by 2, If true print Even or Odd otherwise.

Ternary Operator Syntax
( Condition ) ? ( if True : Action ) : ( if False : Action ) ;
C++ Code

#include <iostream>
namespace std;

int main ()
{
    int number;
    cout << "Enter a number:"; cin >> number;

    
    //Checking if the number is divisible by 2
    number % 2 == 0 ? cout << "Even":cout << "Odd";
    
    return 0;
}
Output
Enter a number: 17
Odd
print("Even") if num%2 == 0 else print("Odd")
Output:
Odd
Method 3 : Using Bitwise Operator
This Method uses bitwise operators to check if a given number is Even or Odd.

Bitwise Operators
In computer programming, a bitwise operation operates on a bit string, a bit array or a binary numeral at the level of its individual bits. It is a fast and simple action, basic to the higher-level arithmetic operations and directly supported by the processor.
C++ Code

#include <iostream>
using namespace std;
 
// Returns true if n is even, else odd
bool isEven(int number)
{
     
    // n & 1 is 1, then odd, else even
    return (!(number & 1));
}
 
// Driver code
int main()
{
    int number;
    
    cout << "Enter the number: "; cin >> number;

    if(isEven(number))
        cout << "Even";
    else
        cout << "Odd";

    //below can also be used instead of if else conditions
    //isEven(number)? cout << "Even" : cout << "Odd";
 
    return 0;
}
Output
Enter a number: 13
Odd
