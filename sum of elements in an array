Python Code:
Method 1: Iterative approach
a=list(map(int,input().split()))
sum=0
for i in range(len(a)):
    sum+=a[i]
print(sum)
Output:
10 20 30 40 50
150

Method 2: Using in-built function
a=list(map(int,input().split()))
sum=sum(a)
print(sum)
Output:
10 89 9 56 4 80 8
256

Method 3:
def sum(a):
    sum=0
    for i in range(len(a)):
        sum+=a[i]
    return sum
a=list(map(int,input().split()))
print(sum(a))
Output:
10 20 30 40
100

CPP Code:
Method 1:
#include<iostream>
using namespace std;
int main()
{
    int n,sum=0;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
        sum+=arr[i];
    }
    cout<<sum;
}
Output:
7
10 89 9 56 4 80 8
256

Method 2:
#include<iostream>
using namespace std;
int getSumOfArray(int arr[],int n)
{
    int sum=0;
    for(int i=0;i<n;i++)
    {
        sum+=arr[i];
    }
    return sum;
}
int main()
{
    int n1;
    cin>>n1;
    int arr[n1];
    for(int i=0;i<n1;i++)
    {
        cin>>arr[i];
    }
    cout<<getSumOfArray(arr,n1);
}
Output:
7
10 89 9 56 4 80 8
256

