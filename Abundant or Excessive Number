Python Code:
Method 1: Using Range until Number
n=int(input())
sum=0
for i in range(1,n):
    if(n%i==0):
        sum+=i
if(sum>n):
    print("Abundant Number")
else:
    print("Not Abundant Number")
Output:
12
Abundant Number

Method 2: Using Range until Sqrt( Number )
import math
n=int(input())
sum=0
i=1
while(i<=math.sqrt(n)):
    if(n%i==0):
        # If divisors are equal,take only one of them
        if(n//i==i):
        else: # Otherwise take both   sum+=i
            sum+=i
            sum+=n//i
    i=i+1
# calculate sum of all proper divisors only
sum=sum-n
if(sum>n):
    print("Abundant_Number")
else:
    print("Not_Abundant_Number")
Output:
21
Not_Abundant_Number

CPP Code:
Method1:
#include<iostream>
using namespace std;
int main()
{
    int n,sum=0;
    cin>>n;
    for(int i=1;i<n;i++)
    {
        if(n%i==0)
        sum+=i;
    }
    if(sum>n)
    cout<<"Abundant Number";
    else
    cout<<"Not Abundant Number";
}
Output:
18
Abundant Number

Method 2:
#include<iostream>
using namespace std;
int getAbundantNum(int n)
{
    int sum=0;
    for(int i=1;i<n;i++)
    {
        if(n%i==0)
        sum+=i;
    }
    if(sum>n)
    cout<<"Abundant Number";
    else
    cout<<"Not Abundant Number";
}
int main()
{
   int n;
   cin>>n;
   getAbundantNum(n);
}
Output:
79
Not Abundant Number
